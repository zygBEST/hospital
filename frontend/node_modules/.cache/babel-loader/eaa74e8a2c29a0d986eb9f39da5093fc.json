{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\ChatBot.vue","mtime":1743953677517},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1689001367226},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001368654},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaGF0Qm90JywKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXN0aW9uOiAnJywKICAgICAgbWVzc2FnZXM6IFtdLAogICAgICBjaGF0SGlzdG9yeTogW10sCiAgICAgIGlzVGhpbmtpbmc6IGZhbHNlCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHNlbmRRdWVzdGlvbigpIHsKICAgICAgY29uc3QgdHJpbW1lZCA9IHRoaXMucXVlc3Rpb24udHJpbSgpOwoKICAgICAgaWYgKCF0cmltbWVkKSB7CiAgICAgICAgYWxlcnQoJ+ivt+i+k+WFpeaCqOeahOmXrumimO+8gScpOwogICAgICAgIHJldHVybjsKICAgICAgfSAvLyDmt7vliqDnlKjmiLfmtojmga8KCgogICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goewogICAgICAgIHJvbGU6ICd1c2VyJywKICAgICAgICBjb250ZW50OiB0cmltbWVkCiAgICAgIH0pOwogICAgICB0aGlzLmNoYXRIaXN0b3J5LnB1c2goewogICAgICAgIHJvbGU6ICd1c2VyJywKICAgICAgICBjb250ZW50OiB0cmltbWVkCiAgICAgIH0pOwogICAgICB0aGlzLnF1ZXN0aW9uID0gJyc7CiAgICAgIHRoaXMuaXNUaGlua2luZyA9IHRydWU7CgogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9jaGF0JywgewogICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgIH0sCiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgIHF1ZXN0aW9uOiB0cmltbWVkLAogICAgICAgICAgICBoaXN0b3J5OiB0aGlzLmNoYXRIaXN0b3J5CiAgICAgICAgICB9KQogICAgICAgIH0pOwogICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcignSFRUUCDplJnor6/vvJonICsgcmVzcG9uc2Uuc3RhdHVzKTsKICAgICAgICBhd2FpdCB0aGlzLnN0cmVhbU1lc3NhZ2UocmVzcG9uc2UpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuaXNUaGlua2luZyA9IGZhbHNlOwogICAgICAgIHRoaXMubWVzc2FnZXMucHVzaCh7CiAgICAgICAgICByb2xlOiAnYXNzaXN0YW50JywKICAgICAgICAgIGNvbnRlbnQ6ICfor7fmsYLplJnor6/vvJonICsgZXJyb3IubWVzc2FnZQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIHN0cmVhbU1lc3NhZ2UocmVzcG9uc2UpIHsKICAgICAgY29uc3QgcmVhZGVyID0gcmVzcG9uc2UuYm9keS5nZXRSZWFkZXIoKTsKICAgICAgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigndXRmLTgnKTsKICAgICAgbGV0IGFpTXNnID0gJyc7CiAgICAgIGNvbnN0IG5ld01zZyA9IHsKICAgICAgICByb2xlOiAnYXNzaXN0YW50JywKICAgICAgICBjb250ZW50OiAnJwogICAgICB9OwogICAgICB0aGlzLm1lc3NhZ2VzLnB1c2gobmV3TXNnKTsKICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy5zY3JvbGxUb0JvdHRvbSk7CgogICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgIGNvbnN0IHsKICAgICAgICAgIHZhbHVlLAogICAgICAgICAgZG9uZQogICAgICAgIH0gPSBhd2FpdCByZWFkZXIucmVhZCgpOwogICAgICAgIGlmIChkb25lKSBicmVhazsKICAgICAgICBjb25zdCB0ZXh0ID0gZGVjb2Rlci5kZWNvZGUodmFsdWUsIHsKICAgICAgICAgIHN0cmVhbTogdHJ1ZQogICAgICAgIH0pOwogICAgICAgIG5ld01zZy5jb250ZW50ICs9IHRleHQ7CiAgICAgICAgYWlNc2cgKz0gdGV4dDsKICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnNjcm9sbFRvQm90dG9tKTsKICAgICAgfQoKICAgICAgdGhpcy5jaGF0SGlzdG9yeS5wdXNoKHsKICAgICAgICByb2xlOiAnYXNzaXN0YW50JywKICAgICAgICBjb250ZW50OiBhaU1zZwogICAgICB9KTsKICAgICAgdGhpcy5pc1RoaW5raW5nID0gZmFsc2U7CiAgICB9LAoKICAgIHNjcm9sbFRvQm90dG9tKCkgewogICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLiRyZWZzLmNoYXRDb250YWluZXI7CiAgICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBjb250YWluZXIuc2Nyb2xsSGVpZ2h0OwogICAgfQoKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy5xdWVzdGlvbiA9ICfkvaDmmK/kuIDkuKpBSeWMu+eUn++8jOivt+S9oOW4ruWKqeaIkeWbnuetlOS7u+S9leWMu+eWl+mXrumimCc7CiAgICB0aGlzLnNlbmRRdWVzdGlvbigpOwogIH0KCn07"},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GATA;;AAUA,EAAA,OAAA,EAAA;AACA,UAAA,YAAA,GAAA;AACA,YAAA,OAAA,GAAA,KAAA,QAAA,CAAA,IAAA,EAAA;;AACA,UAAA,CAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA;AACA;AACA,OALA,CAOA;;;AACA,WAAA,QAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA;AACA,WAAA,WAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,IAAA;;AAEA,UAAA;AACA,cAAA,QAAA,GAAA,MAAA,KAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,EAAA,MADA;AAEA,UAAA,OAAA,EAAA;AAAA,4BAAA;AAAA,WAFA;AAGA,UAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AAAA,YAAA,QAAA,EAAA,OAAA;AAAA,YAAA,OAAA,EAAA,KAAA;AAAA,WAAA;AAHA,SAAA,CAAA;AAMA,YAAA,CAAA,QAAA,CAAA,EAAA,EAAA,MAAA,IAAA,KAAA,CAAA,aAAA,QAAA,CAAA,MAAA,CAAA;AAEA,cAAA,KAAA,aAAA,CAAA,QAAA,CAAA;AAEA,OAXA,CAWA,OAAA,KAAA,EAAA;AACA,aAAA,UAAA,GAAA,KAAA;AACA,aAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA;AAAA,UAAA,OAAA,EAAA,UAAA,KAAA,CAAA;AAAA,SAAA;AACA;AACA,KA7BA;;AA8BA,UAAA,aAAA,CAAA,QAAA,EAAA;AACA,YAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,WAAA,CAAA,OAAA,CAAA;AAEA,UAAA,KAAA,GAAA,EAAA;AACA,YAAA,MAAA,GAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,WAAA,SAAA,CAAA,KAAA,cAAA;;AAEA,aAAA,IAAA,EAAA;AACA,cAAA;AAAA,UAAA,KAAA;AAAA,UAAA;AAAA,YAAA,MAAA,MAAA,CAAA,IAAA,EAAA;AACA,YAAA,IAAA,EAAA;AAEA,cAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,IAAA,IAAA;AACA,QAAA,KAAA,IAAA,IAAA;AACA,aAAA,SAAA,CAAA,KAAA,cAAA;AACA;;AAEA,WAAA,WAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,WAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,KAnDA;;AAoDA,IAAA,cAAA,GAAA;AACA,YAAA,SAAA,GAAA,KAAA,KAAA,CAAA,aAAA;AACA,MAAA,SAAA,CAAA,SAAA,GAAA,SAAA,CAAA,YAAA;AACA;;AAvDA,GAVA;;AAmEA,EAAA,OAAA,GAAA;AACA,SAAA,QAAA,GAAA,wBAAA;AACA,SAAA,YAAA;AACA;;AAtEA,CAAA","sourcesContent":["<template>\r\n    <div class=\"chat-wrapper\">\r\n        <h1>向AI医生咨询</h1>\r\n        <div class=\"chat-container\" ref=\"chatContainer\">\r\n            <p class=\"thinking\" v-if=\"isThinking\">正在输入...</p>\r\n            <div v-for=\"(msg, index) in messages\" :key=\"index\"\r\n                :class=\"['chat-message', msg.role === 'user' ? 'user-message' : 'ai-message']\">\r\n                {{ msg.content }}\r\n            </div>\r\n        </div>\r\n\r\n        <input v-model=\"question\" @keydown.enter.prevent=\"sendQuestion\" type=\"text\" placeholder=\"请输入您的问题...\" required />\r\n        <button @click=\"sendQuestion\">提交问题</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ChatBot',\r\n    data() {\r\n        return {\r\n            question: '',\r\n            messages: [],\r\n            chatHistory: [],\r\n            isThinking: false\r\n        }\r\n    },\r\n    methods: {\r\n        async sendQuestion() {\r\n            const trimmed = this.question.trim()\r\n            if (!trimmed) {\r\n                alert('请输入您的问题！')\r\n                return\r\n            }\r\n\r\n            // 添加用户消息\r\n            this.messages.push({ role: 'user', content: trimmed })\r\n            this.chatHistory.push({ role: 'user', content: trimmed })\r\n            this.question = ''\r\n            this.isThinking = true\r\n\r\n            try {\r\n                const response = await fetch('/chat', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ question: trimmed, history: this.chatHistory })\r\n                })\r\n\r\n                if (!response.ok) throw new Error('HTTP 错误：' + response.status)\r\n\r\n                await this.streamMessage(response)\r\n\r\n            } catch (error) {\r\n                this.isThinking = false\r\n                this.messages.push({ role: 'assistant', content: '请求错误：' + error.message })\r\n            }\r\n        },\r\n        async streamMessage(response) {\r\n            const reader = response.body.getReader()\r\n            const decoder = new TextDecoder('utf-8')\r\n\r\n            let aiMsg = ''\r\n            const newMsg = { role: 'assistant', content: '' }\r\n            this.messages.push(newMsg)\r\n            this.$nextTick(this.scrollToBottom)\r\n\r\n            while (true) {\r\n                const { value, done } = await reader.read()\r\n                if (done) break\r\n\r\n                const text = decoder.decode(value, { stream: true })\r\n                newMsg.content += text\r\n                aiMsg += text\r\n                this.$nextTick(this.scrollToBottom)\r\n            }\r\n\r\n            this.chatHistory.push({ role: 'assistant', content: aiMsg })\r\n            this.isThinking = false\r\n        },\r\n        scrollToBottom() {\r\n            const container = this.$refs.chatContainer\r\n            container.scrollTop = container.scrollHeight\r\n        }\r\n    },\r\n    mounted() {\r\n        this.question = '你是一个AI医生，请你帮助我回答任何医疗问题'\r\n        this.sendQuestion()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    padding: 20px;\r\n    background-color: #f7f7f7;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.chat-container {\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    position: relative;\r\n    /* 保证容器内的元素能定位 */\r\n}\r\n\r\n.chat-message {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    max-width: 80%;\r\n    word-wrap: break-word;\r\n}\r\n\r\n.user-message {\r\n    background-color: #e0f7fa;\r\n    align-self: flex-end;\r\n}\r\n\r\n.ai-message {\r\n    background-color: #f1f1f1;\r\n    align-self: flex-start;\r\n}\r\n\r\ninput,\r\nbutton {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n    background-color: #007BFF;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.thinking {\r\n    font-style: italic;\r\n    color: #999;\r\n    display: none;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    margin-bottom: 0;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}