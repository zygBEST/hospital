{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\Login.vue","mtime":1742720128968},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689001367870},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689001369658},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1689001368637},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689001367224},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxvZ2luLXdyYXAgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZDogIzBmOTg3NjsKICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2Fzc2V0cy9kb2N0b3IuanBlZyIpOwogIGJhY2tncm91bmQtc2l6ZTogMTAwJSAxMDAlOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div style=\"height: 100vh;\n  display: flex; align-items: center;\n  justify-content: center;\n background-color: #427cb3;;\n\" class=\"login-wrap\">\n    <div style=\"display: flex; background-color: rgba(255, 255, 255, 0.82); width: 50%; border-radius: 5px; overflow: hidden\">\n      <div style=\"flex: 1\">\n        <img src=\"@/assets/login1.png\" alt=\"\" style=\"width: 400px;height: 400px\" />\n      </div>\n      <div style=\"flex: 1; display: flex; align-items: center; justify-content: center;\">\n        <el-form :model=\"loginForm\" style=\"width: 80%\" :rules=\"loginRules\" ref=\"ruleForm\">\n          <div style=\"font-size: 20px; font-weight: bold; margin-bottom: 20px;\">\n            <i>医者仁心，以信立院！</i>\n            <div style=\"font-size: small;color:darkgray\">如有困难，请前往右侧导诊台咨询</div>\n          </div>\n          <el-form-item prop=\"id\">\n            <!--必须绑定v-model输入框才能输入字符---->\n            <el-input v-model=\"loginForm.id\">\n              <i slot=\"prefix\" class=\"el-input__icon el-icon-user\"></i>\n            </el-input>\n          </el-form-item>\n\n          <el-form-item prop=\"password\">\n            <el-input v-model=\"loginForm.password\" size=\"medium\" placeholder=\"请输入密码\" clearable show-password>\n              <i slot=\"prefix\" class=\"el-input__icon el-icon-lock\"></i>\n            </el-input>\n          </el-form-item>\n          <el-form-item class=\"role\">\n            <el-radio-group v-model=\"role\" size=\"small\">\n              <el-radio label=\"患者\"></el-radio>\n              <el-radio label=\"医生\"></el-radio>\n              <el-radio label=\"管理员\"></el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" style=\"width: 100%\" @click=\"submitLoginForm('ruleForm')\">登 录</el-button>\n          </el-form-item>\n\n          <div style=\"display: flex\">\n            <div style=\"flex: 1\">\n              还没有账号？请\n              <span style=\"color: #0f9876; cursor: pointer\" @click=\"registerFormVisible = true\">注册</span>\n            </div>\n\n          </div>\n        </el-form>\n      </div>\n    </div>\n    <!-- 注册对话框 -->\n    <el-dialog title=\"患者注册\" :visible.sync=\"registerFormVisible\">\n      <el-form class=\"findPassword\" :model=\"registerForm\" :rules=\"registerRules\" ref=\"registerForm\">\n        <el-form-item label=\"账号\" label-width=\"80px\" prop=\"pId\">\n          <el-input v-model.number=\"registerForm.pId\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" label-width=\"80px\">\n          <el-radio v-model=\"registerForm.pGender\" label=\"男\">男</el-radio>\n          <el-radio v-model=\"registerForm.pGender\" label=\"女\">女</el-radio>\n        </el-form-item>\n        <el-form-item label=\"密码\" label-width=\"80px\" prop=\"pPassword\">\n          <el-input v-model=\"registerForm.pPassword\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" label-width=\"80px\" prop=\"pName\">\n          <el-input v-model=\"registerForm.pName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"出生日期\" label-width=\"80px\" prop=\"pBirthday\">\n          <el-date-picker v-model=\"registerForm.pBirthday\" type=\"date\" placeholder=\"选择日期\" value-format=\"yyyy-MM-dd\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"手机号\" label-width=\"80px\" prop=\"pPhone\">\n          <el-input v-model=\"registerForm.pPhone\" maxlength=\"11\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱号\" label-width=\"80px\" prop=\"pEmail\">\n          <el-input v-model=\"registerForm.pEmail\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"身份证号\" label-width=\"80px\" prop=\"pCard\">\n          <el-input v-model=\"registerForm.pCard\" maxlength=\"18\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"registerFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"registerClick('registerForm')\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n\n</template>\n\n<script>\nimport request from \"@/utils/request.js\";\nimport { setToken } from \"@/utils/storage.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    var validateMoblie = (rule, value, callback) => {\n      if (value === undefined) {\n        callback(new Error(\"请输入手机号\"));\n      } else {\n        let reg = /^1(3[0-9]|4[5,7]|5[0,1,2,3,5,6,7,8,9]|6[2,5,6,7]|7[0,1,7,8]|8[0-9]|9[1,3,8,9])\\d{8}$/;\n        if (!reg.test(value)) {\n          callback(new Error(\"请输入合法的手机号\"));\n        }\n        callback();\n      }\n    };\n    var validateCard = (rule, value, callback) => {\n      if (value === undefined) {\n        callback(new Error(\"请输入身份证号\"));\n      } else {\n        let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n        if (!reg.test(value)) {\n          callback(new Error(\"请输入合法的身份证号码\"));\n        }\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (this.findForm.checkPassword !== \"\") {\n          this.$refs.findForm.validateField(\"checkPassword\");\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.findForm.newPassword) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      //背景图片\n      backgroundDiv: {\n        backgroundImage: \"url(\" + require(\"../assets/doctor.jpg\") + \")\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100% 100%\"\n      },\n      loginForm: {\n        id: \"202301\",\n        password: \"123456\"\n      },\n      loginRules: {\n        id: [\n          { required: true, message: \"请输入账号编号\", trigger: \"blur\" },\n          { min: 3, max: 50, message: \"长度在 3到 50 个字符\", trigger: \"blur\" }\n        ],\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }]\n      },\n      role: \"患者\",\n      findRole: \"患者\",\n      //找回密码\n      findFormVisible: false,\n      findForm: {\n        code: \"\",\n        newPassword: \"\",\n        checkPassword: \"\",\n        pEmail: \"\"\n      },\n\n      findRules: {\n        pEmail: [\n          { required: true, message: \"请输入邮箱地址\", trigger: \"blur\" },\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"]\n          }\n        ],\n        code: [{ required: true, message: \"请输入验证码\", trigger: \"blur\" }],\n        newPassword: [{ validator: validatePass, trigger: \"blur\" }],\n        checkPassword: [{ validator: validatePass2, trigger: \"blur\" }]\n      },\n      totalTime: 60,\n      content: \"发送验证码\",\n      canClick: true,\n      //注册\n      registerFormVisible: false,\n      registerForm: {\n        pGender: \"男\"\n      },\n      registerRules: {\n        pId: [\n          { required: true, message: \"请输入账号\", trigger: \"blur\" },\n          { type: \"number\", message: \"账号必须数字类型\", trigger: \"blur\" }\n        ],\n        pPassword: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          { min: 4, max: 50, message: \"长度在 4到 50 个字符\", trigger: \"blur\" }\n        ],\n        pName: [\n          { required: true, message: \"请输入姓名\", trigger: \"blur\" },\n          { min: 2, max: 8, message: \"长度在 2到 8 个字符\", trigger: \"blur\" }\n        ],\n        pEmail: [\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\n          {\n            type: \"email\",\n            message: \"请输入正确的邮箱地址\",\n            trigger: [\"blur\", \"change\"]\n          }\n        ],\n        pPhone: [{ validator: validateMoblie }],\n        pCard: [{ validator: validateCard }],\n        pBirthday: [\n          { required: true, message: \"选择出生日期\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    //点击注册确认按钮\n    registerClick(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          request\n            .post(\"/patient/addPatient\", {\n              pId: this.registerForm.pId,\n              pName: this.registerForm.pName,\n              pPassword: this.registerForm.pPassword,\n              pGender: this.registerForm.pGender,\n              pEmail: this.registerForm.pEmail,\n              pPhone: this.registerForm.pPhone,\n              pCard: this.registerForm.pCard,\n              pBirthday: this.registerForm.pBirthday\n            })\n            .then(res => {\n              if (res.data.status !== 200)\n                return this.$message.error(res.data.message);\n              this.registerFormVisible = false;\n              this.$message.success(res.data.message);\n            });\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    // 点击找回密码确认按钮\n    findPassword(findForm) {\n      this.$refs[findForm].validate(valid => {\n        if (valid) {\n          //如果是选中患者\n          if (this.findRole === \"患者\") {\n            request\n              .get(\"patient/findPassword\", {\n                params: {\n                  pEmail: this.findForm.pEmail,\n                  pPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n          //如果是选中管理员\n          if (this.findRole === \"管理员\") {\n            request\n              .get(\"admin/findPassword\", {\n                params: {\n                  aEmail: this.findForm.pEmail,\n                  aPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n          //如果是选中患者\n          if (this.findRole === \"医生\") {\n            request\n              .get(\"doctor/findPassword\", {\n                params: {\n                  dEmail: this.findForm.pEmail,\n                  dPassword: this.findForm.newPassword,\n                  code: this.findForm.code\n                }\n              })\n              .then(res => {\n                if (res.data.status !== 200)\n                  return this.$message.error(\"验证码错误或者已过期！！！\");\n                this.$message.success(\"密码修改成功！！请登录\");\n                this.findFormVisible = false;\n              });\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n    //点击发送验证码按钮\n    sendEmail() {\n      //倒计时\n      if (!this.canClick) return; //改动的是这两行代码\n      this.canClick = false;\n      this.content = this.totalTime + \"s后重新发送\";\n      let clock = window.setInterval(() => {\n        this.totalTime--;\n        this.content = this.totalTime + \"s后重新发送\";\n        if (this.totalTime < 0) {\n          window.clearInterval(clock);\n          this.content = \"重新发送验证码\";\n          this.totalTime = 10;\n          this.canClick = true; //这里重新开启\n        }\n      }, 1000);\n\n      //如果是选中患者\n      if (this.findRole === \"患者\") {\n        request\n          .get(\"patient/sendEmail\", {\n            params: {\n              pEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n      //如果是选中管理员\n      if (this.findRole === \"管理员\") {\n        request\n          .get(\"admin/sendEmail\", {\n            params: {\n              aEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n      //如果是选中医生\n      if (this.findRole === \"医生\") {\n        request\n          .get(\"doctor/sendEmail\", {\n            params: {\n              dEmail: this.findForm.pEmail\n            }\n          })\n          .then(res => {\n            console.log(this.findForm.pEmail);\n            console.log(res);\n            if (res.data.status !== 200)\n              return this.$message.error(\"该邮箱暂未注册！请先注册！\");\n            this.$message.success(\"验证码发送成功！\");\n          });\n      }\n    },\n    // 提交表单\n    submitLoginForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (!valid) {\n          console.log(\"error submit!!\");\n          return false;\n        }\n\n        const roleMap = {\n          \"管理员\": { idKey: \"aId\", passwordKey: \"aPassword\", url: \"admin/login\", redirect: \"/adminLayout\" },\n          \"医生\": { idKey: \"dId\", passwordKey: \"dPassword\", url: \"doctor/login\", redirect: \"/doctorLayout\" },\n          \"患者\": { idKey: \"pId\", passwordKey: \"pPassword\", url: \"patient/login\", redirect: \"/patientLayout\" }\n        };\n\n        const roleConfig = roleMap[this.role];\n        if (!roleConfig) {\n          this.$message.error(\"请选择正确的角色\");\n          return;\n        }\n\n        let params = new URLSearchParams();\n        params.append(roleConfig.idKey, this.loginForm.id);\n        params.append(roleConfig.passwordKey, this.loginForm.password);\n        params.append(\"user_role\", this.role);\n        console.log(this.role);\n\n\n        request.post(roleConfig.url, params)\n          .then(res => {\n            console.log(res);\n            if (res.data.status !== 200) {\n              return this.$message.error(\"用户名或密码错误\");\n            }\n            setToken(res.data.data.token);\n            this.$router.push(roleConfig.redirect);\n          })\n          .catch(err => {\n            this.$message.error(\"用户名或密码错误\");\n            console.error(err);\n          });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.login-wrap {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: #0f9876;\n  background-image: url(\"../assets/doctor.jpeg\");\n  background-size: 100% 100%;\n}\n</style>\n"]}]}