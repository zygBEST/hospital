{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\ChatBot.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\ChatBot.vue","mtime":1743953677517},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1689001367226},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001368654},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogJ0NoYXRCb3QnLA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBxdWVzdGlvbjogJycsDQogICAgICAgICAgICBtZXNzYWdlczogW10sDQogICAgICAgICAgICBjaGF0SGlzdG9yeTogW10sDQogICAgICAgICAgICBpc1RoaW5raW5nOiBmYWxzZQ0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGFzeW5jIHNlbmRRdWVzdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHRyaW1tZWQgPSB0aGlzLnF1ZXN0aW9uLnRyaW0oKQ0KICAgICAgICAgICAgaWYgKCF0cmltbWVkKSB7DQogICAgICAgICAgICAgICAgYWxlcnQoJ+ivt+i+k+WFpeaCqOeahOmXrumimO+8gScpDQogICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOa3u+WKoOeUqOaIt+a2iOaBrw0KICAgICAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHsgcm9sZTogJ3VzZXInLCBjb250ZW50OiB0cmltbWVkIH0pDQogICAgICAgICAgICB0aGlzLmNoYXRIaXN0b3J5LnB1c2goeyByb2xlOiAndXNlcicsIGNvbnRlbnQ6IHRyaW1tZWQgfSkNCiAgICAgICAgICAgIHRoaXMucXVlc3Rpb24gPSAnJw0KICAgICAgICAgICAgdGhpcy5pc1RoaW5raW5nID0gdHJ1ZQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9jaGF0Jywgew0KICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sDQogICAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcXVlc3Rpb246IHRyaW1tZWQsIGhpc3Rvcnk6IHRoaXMuY2hhdEhpc3RvcnkgfSkNCiAgICAgICAgICAgICAgICB9KQ0KDQogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgbmV3IEVycm9yKCdIVFRQIOmUmeivr++8micgKyByZXNwb25zZS5zdGF0dXMpDQoNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnN0cmVhbU1lc3NhZ2UocmVzcG9uc2UpDQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc1RoaW5raW5nID0gZmFsc2UNCiAgICAgICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goeyByb2xlOiAnYXNzaXN0YW50JywgY29udGVudDogJ+ivt+axgumUmeivr++8micgKyBlcnJvci5tZXNzYWdlIH0pDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGFzeW5jIHN0cmVhbU1lc3NhZ2UocmVzcG9uc2UpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IHJlc3BvbnNlLmJvZHkuZ2V0UmVhZGVyKCkNCiAgICAgICAgICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoJ3V0Zi04JykNCg0KICAgICAgICAgICAgbGV0IGFpTXNnID0gJycNCiAgICAgICAgICAgIGNvbnN0IG5ld01zZyA9IHsgcm9sZTogJ2Fzc2lzdGFudCcsIGNvbnRlbnQ6ICcnIH0NCiAgICAgICAgICAgIHRoaXMubWVzc2FnZXMucHVzaChuZXdNc2cpDQogICAgICAgICAgICB0aGlzLiRuZXh0VGljayh0aGlzLnNjcm9sbFRvQm90dG9tKQ0KDQogICAgICAgICAgICB3aGlsZSAodHJ1ZSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHJlYWRlci5yZWFkKCkNCiAgICAgICAgICAgICAgICBpZiAoZG9uZSkgYnJlYWsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSBkZWNvZGVyLmRlY29kZSh2YWx1ZSwgeyBzdHJlYW06IHRydWUgfSkNCiAgICAgICAgICAgICAgICBuZXdNc2cuY29udGVudCArPSB0ZXh0DQogICAgICAgICAgICAgICAgYWlNc2cgKz0gdGV4dA0KICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKHRoaXMuc2Nyb2xsVG9Cb3R0b20pDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuY2hhdEhpc3RvcnkucHVzaCh7IHJvbGU6ICdhc3Npc3RhbnQnLCBjb250ZW50OiBhaU1zZyB9KQ0KICAgICAgICAgICAgdGhpcy5pc1RoaW5raW5nID0gZmFsc2UNCiAgICAgICAgfSwNCiAgICAgICAgc2Nyb2xsVG9Cb3R0b20oKSB7DQogICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLiRyZWZzLmNoYXRDb250YWluZXINCiAgICAgICAgICAgIGNvbnRhaW5lci5zY3JvbGxUb3AgPSBjb250YWluZXIuc2Nyb2xsSGVpZ2h0DQogICAgICAgIH0NCiAgICB9LA0KICAgIG1vdW50ZWQoKSB7DQogICAgICAgIHRoaXMucXVlc3Rpb24gPSAn5L2g5piv5LiA5LiqQUnljLvnlJ/vvIzor7fkvaDluK7liqnmiJHlm57nrZTku7vkvZXljLvnlpfpl67popgnDQogICAgICAgIHRoaXMuc2VuZFF1ZXN0aW9uKCkNCiAgICB9DQp9DQo="},{"version":3,"sources":["ChatBot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatBot.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"chat-wrapper\">\r\n        <h1>向AI医生咨询</h1>\r\n        <div class=\"chat-container\" ref=\"chatContainer\">\r\n            <p class=\"thinking\" v-if=\"isThinking\">正在输入...</p>\r\n            <div v-for=\"(msg, index) in messages\" :key=\"index\"\r\n                :class=\"['chat-message', msg.role === 'user' ? 'user-message' : 'ai-message']\">\r\n                {{ msg.content }}\r\n            </div>\r\n        </div>\r\n\r\n        <input v-model=\"question\" @keydown.enter.prevent=\"sendQuestion\" type=\"text\" placeholder=\"请输入您的问题...\" required />\r\n        <button @click=\"sendQuestion\">提交问题</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ChatBot',\r\n    data() {\r\n        return {\r\n            question: '',\r\n            messages: [],\r\n            chatHistory: [],\r\n            isThinking: false\r\n        }\r\n    },\r\n    methods: {\r\n        async sendQuestion() {\r\n            const trimmed = this.question.trim()\r\n            if (!trimmed) {\r\n                alert('请输入您的问题！')\r\n                return\r\n            }\r\n\r\n            // 添加用户消息\r\n            this.messages.push({ role: 'user', content: trimmed })\r\n            this.chatHistory.push({ role: 'user', content: trimmed })\r\n            this.question = ''\r\n            this.isThinking = true\r\n\r\n            try {\r\n                const response = await fetch('/chat', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ question: trimmed, history: this.chatHistory })\r\n                })\r\n\r\n                if (!response.ok) throw new Error('HTTP 错误：' + response.status)\r\n\r\n                await this.streamMessage(response)\r\n\r\n            } catch (error) {\r\n                this.isThinking = false\r\n                this.messages.push({ role: 'assistant', content: '请求错误：' + error.message })\r\n            }\r\n        },\r\n        async streamMessage(response) {\r\n            const reader = response.body.getReader()\r\n            const decoder = new TextDecoder('utf-8')\r\n\r\n            let aiMsg = ''\r\n            const newMsg = { role: 'assistant', content: '' }\r\n            this.messages.push(newMsg)\r\n            this.$nextTick(this.scrollToBottom)\r\n\r\n            while (true) {\r\n                const { value, done } = await reader.read()\r\n                if (done) break\r\n\r\n                const text = decoder.decode(value, { stream: true })\r\n                newMsg.content += text\r\n                aiMsg += text\r\n                this.$nextTick(this.scrollToBottom)\r\n            }\r\n\r\n            this.chatHistory.push({ role: 'assistant', content: aiMsg })\r\n            this.isThinking = false\r\n        },\r\n        scrollToBottom() {\r\n            const container = this.$refs.chatContainer\r\n            container.scrollTop = container.scrollHeight\r\n        }\r\n    },\r\n    mounted() {\r\n        this.question = '你是一个AI医生，请你帮助我回答任何医疗问题'\r\n        this.sendQuestion()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: Arial, sans-serif;\r\n    padding: 20px;\r\n    background-color: #f7f7f7;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.chat-container {\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    position: relative;\r\n    /* 保证容器内的元素能定位 */\r\n}\r\n\r\n.chat-message {\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    max-width: 80%;\r\n    word-wrap: break-word;\r\n}\r\n\r\n.user-message {\r\n    background-color: #e0f7fa;\r\n    align-self: flex-end;\r\n}\r\n\r\n.ai-message {\r\n    background-color: #f1f1f1;\r\n    align-self: flex-start;\r\n}\r\n\r\ninput,\r\nbutton {\r\n    padding: 10px;\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\nbutton {\r\n    background-color: #007BFF;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.thinking {\r\n    font-style: italic;\r\n    color: #999;\r\n    display: none;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    margin-bottom: 0;\r\n}\r\n</style>"]}]}