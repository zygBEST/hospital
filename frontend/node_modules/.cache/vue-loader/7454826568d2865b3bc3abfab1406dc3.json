{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\SectionMessage.vue?vue&type=style&index=0&id=41b024ea&scoped=true&lang=scss&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\SectionMessage.vue","mtime":1742656919256},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689001367870},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689001369658},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1689001368637},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689001367224},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXRlVWwgbGkgewogICAgZGlzcGxheTogaW5saW5lOwogICAgcGFkZGluZzogMXB4Owp9CgouZGF0ZVVsIHsKICAgIG1hcmdpbjogMTBweDsKfQoKLmVsLWJyZWFkY3J1bWIgewogICAgbWFyZ2luOiA4cHg7Cn0KCi5oZWFkIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgouZWwtZm9ybSB7CiAgICBtYXJnaW4tdG9wOiAwOwp9Cg=="},{"version":3,"sources":["SectionMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+WA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"SectionMessage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <!-- 卡片 -->\n        <el-card>\n            <!-- 面包屑 -->\n            <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n                <el-breadcrumb-item :to=\"{ path: '/orderOperate' }\">科室选择</el-breadcrumb-item>\n                <el-breadcrumb-item>日期选择</el-breadcrumb-item>\n                <el-breadcrumb-item>挂号</el-breadcrumb-item>\n            </el-breadcrumb>\n\n            <!-- 两边布局 -->\n            <div class=\"head\">\n                <div>\n                    <i class=\"iconfont icon-r-user1\" style=\"margin: 5px; font-size: 26px\">{{ sectionOpt }}医生列表</i>\n                </div>\n\n                <!-- 选择挂号时间 -->\n                <div>\n                    <i class=\"iconfont icon-r-paper\" style=\"font-size: 22px\">请选择你要挂号的日期：</i>\n                    <ul class=\"dateUl\">\n                        <li v-for=\"monthDay in monthDays\" :key=\"monthDay\">\n                            <el-button icon=\"iconfont icon-r-paper\" @click=\"dateClick(monthDay)\">{{\n                                monthDay }}</el-button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <!-- 表格 -->\n            <el-table :data=\"sectionData\" stripe style=\"width: 100%\" border>\n                <el-table-column type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\n                <el-table-column prop=\"dId\" label=\"工号\" width=\"80\">\n                </el-table-column>\n                <el-table-column prop=\"dName\" label=\"姓名\" width=\"80\">\n                </el-table-column>\n                <el-table-column prop=\"dGender\" label=\"性别\" width=\"60\">\n                </el-table-column>\n                <el-table-column prop=\"dPost\" label=\"职位\" width=\"100\">\n                </el-table-column>\n                <el-table-column prop=\"dSection\" label=\"科室\" width=\"100\"></el-table-column>\n                <el-table-column prop=\"dIntroduction\" label=\"简介\">\n                </el-table-column>\n                <el-table-column prop=\"dPrice\" label=\"挂号费用/元\" width=\"80\">\n                </el-table-column>\n                <el-table-column prop=\"dAvgStar\" label=\"评价/5分\" width=\"80\">\n                </el-table-column>\n                <el-table-column label=\"操作\" width=\"140\" v-if=\"clickTag\">\n                    <template slot-scope=\"scope\">\n                        <el-button class=\"iconfont icon-r-paper\" style=\"font-size: 14px\" type=\"warning\"\n                            @click=\"openClick(scope.row.dId, scope.row.dName, scope.row.dPrice)\">\n                            挂号</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </el-card>\n        <!-- 挂号对话框 -->\n        <el-dialog title=\"填写挂号信息\" :visible.sync=\"orderFormVisible\">\n            <el-form :model=\"orderForm\" ref=\"orderForm\" :rules=\"orderRules\">\n                <el-form-item label=\"挂号时间段\" label-width=\"100px\" prop=\"oTime\">\n                    <el-select v-model=\"orderForm.oTime\" placeholder=\"请选择\" no-data-text=\"请尝试预约明日\">\n                        <el-option v-for=\"time in times\" :key=\"time\" :label=\"time\" :value=\"time\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"挂号日期\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.orderDate\" autocomplete=\"off\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"医生工号\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.dId\" autocomplete=\"off\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"医生姓名\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.dName\" autocomplete=\"off\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"患者姓名\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.pName\" autocomplete=\"off\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"患者身份证号\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.pCard\" autocomplete=\"off\" disabled></el-input>\n                </el-form-item>\n                <el-form-item label=\"挂号费用\" label-width=\"100px\">\n                    <el-input v-model=\"orderForm.dPrice\" autocomplete=\"off\" disabled style=\"width: 150px;\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"orderFormVisible = false\" style=\"font-size: 18px;\"><i class=\"el-icon-close\"\n                        style=\"font-size: 20px;\"></i> 取 消</el-button>\n                <el-button type=\"primary\" @click=\"orderSuccess('orderForm')\" style=\"font-size: 18px;\"><i\n                        class=\"el-icon-check\" style=\"font-size: 20px;\"></i> 确 定</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nimport jwtDecode from \"jwt-decode\";\nimport request from \"@/utils/request.js\";\nimport { getToken } from \"@/utils/storage.js\";\nexport default {\n    name: \"sectionMessage\",\n    data() {\n        return {\n            sectionOpt: this.$route.query.sectionOpt,\n            sectionData: [],\n            monthDays: [],\n            clickTag: false,\n            orderFormVisible: false,\n            orderForm: { orderDate: \"\" },\n            times: [],\n            orderRules: {\n                oTime: [\n                    { required: true, message: \"选择时间段\", trigger: \"blur\" },\n                ],\n            },\n            //挂号日期\n            orderDate: \"\",\n            //拼接时间和日期成为oId\n            idTime: \"\",\n        };\n    },\n    methods: {\n        //打开挂号对话框触发,获取挂号时间段已剩余票数\n        requestTime(id) {\n            this.idTime = id + this.orderDate;\n            request\n                .get(\"patient/findOrderTime\", {\n                    params: {\n                        arId: this.idTime,\n                    },\n                })\n                .then((res) => {\n                    const date = new Date(this.orderDate);\n                    const today = new Date();\n                    const isToday =\n                        date.getFullYear() === today.getFullYear() &&\n                        date.getMonth() === today.getMonth() &&\n                        date.getDate() === today.getDate();\n                    var array = [];\n                    if (!this.isTimeAfterTarget(\"09:30\") || !isToday) {\n                        array.push(\n                            \"00:01-09:30  \" + \"   余号 \" + res.data.data.eTOn\n                        );\n                    }\n                    if (!this.isTimeAfterTarget(\"10:30\") || !isToday) {\n                        array.push(\n                            \"09:30-10:30  \" + \"   余号 \" + res.data.data.nTOt\n                        );\n                    }\n                    if (!this.isTimeAfterTarget(\"11:30\") || !isToday) {\n                        array.push(\n                            \"10:30-11:30  \" + \"   余号 \" + res.data.data.tTOe\n                        );\n                    }\n                    if (!this.isTimeAfterTarget(\"15:30\") || !isToday) {\n                        array.push(\n                            \"14:30-15:30  \" + \"   余号 \" + res.data.data.fTOf\n                        );\n                    }\n                    if (!this.isTimeAfterTarget(\"16:30\") || !isToday) {\n                        array.push(\n                            \"15:30-16:30  \" + \"   余号 \" + res.data.data.fTOs\n                        );\n                    }\n                    if (!this.isTimeAfterTarget(\"23:59\") || !isToday) {\n                        array.push(\n                            \"16:30-23:59  \" + \"   余号 \" + res.data.data.sTOs\n                        );\n                    }\n                    this.times = array;\n                });\n        },\n        isTimeAfterTarget(timeString) {\n            // 判断时间是否超过timeString(入参格式如：09:30)\n            const currentTime = new Date();\n\n            // 解析传入的目标时间字符串，获取小时和分钟\n            const [targetHour, targetMinute] = timeString.split(\":\");\n\n            // 设置要比较的时间\n            const targetTime = new Date();\n            targetTime.setHours(targetHour);\n            targetTime.setMinutes(targetMinute);\n            targetTime.setSeconds(0);\n\n            // 比较当前时间是否超过了目标时间\n            return currentTime > targetTime;\n        },\n        // 挂号点击确认\n        orderSuccess(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    // 先提交挂号请求\n                    request\n                        .post(\"patient/addOrder\", {\n                            pId: this.userId,\n                            dId: this.orderForm.dId,\n                            oStart:\n                                this.orderForm.orderDate +\n                                \" \" +\n                                this.orderForm.oTime,\n                            arId: this.idTime,\n                        })\n                        .then((res) => {\n                            console.log(res.data);\n                            if (res.data.status !== 200)\n                                return this.$message.error(\n                                    \"该时间段无剩余号源！请重新选择！\"\n                                );\n\n                            // 获取挂号单号\n                            const orderId = res.data.oId;\n\n                            // 调用支付接口\n                            return request.post(\"alipay/pay\", {\n                                subject: this.orderForm.pName + \"挂号费\",\n                                oId: \"gh\" + orderId,\n                                totalAmount: this.orderForm.dPrice, // 费用\n                                passbackParams: \"registration\"  // 挂号支付\n                            });\n                        })\n                        .then(data => {\n                            console.log(data);\n                            \n                            if (data.data.payUrl) {\n                                // 在新窗口打开支付宝支付页面\n                                window.open(data.data.payUrl, '_blank', 'width=800,height=600');\n                                this.oId = data.data.tradeNo;\n                                console.log(\"请求 oId:\", this.oId);\n                                // 设置轮询，确保支付完成后才继续\n                                const pollInterval = 5000; // 每5秒查询一次状态\n                                \n                                const pollOrderStatus = setInterval(() => {\n                                    request\n                                        .get(\"order/o_state\", {  \n                                            params: {\n                                                oId: this.oId.substring(2) // 去掉前两位\n                                            },\n                                        })\n                                        .then((res) => {\n                                            if (res.data.message === \"PAID\") {\n                                                clearInterval(pollOrderStatus); // 停止轮询\n                                                this.orderFormVisible = false;\n                                                this.$message.success(\"挂号成功！\");\n                                                this.orderForm.oTime = '';\n                                                this.$router.push(\"myOrder\");\n                                            }\n                                        })\n                                        .catch((error) => {\n                                            console.error(\"查询订单状态出错:\", error);\n                                        });\n                                }, pollInterval);\n                            } else {\n                                console.error(\"支付请求失败:\", data);\n                            }\n                        })\n                        .catch(error => {\n                            console.error(\"网络错误:\", error);\n                        });\n                } else {\n                    console.log(\"error submit!!\");\n                    return false;\n                }\n            });\n        },\n        //打开挂号对话框\n        openClick(id, name, price) {\n            this.orderForm.dId = id;\n            this.orderForm.dName = name;\n            this.orderForm.pName = this.patientData.pName;\n            this.orderForm.pCard = this.patientData.pCard;\n            this.orderForm.dPrice = price;\n            this.orderFormVisible = true;\n            //请求挂号时间段\n            this.requestTime(id);\n        },\n        //选择日期触发时间\n        dateClick(date) {\n            //获取挂号年月日\n            const nowDate = new Date();\n            let year = nowDate.getFullYear();\n            this.orderForm.orderDate = year + \"-\" + date;\n            let dateYear = year + \"-\" + date;\n            this.orderDate = dateYear;\n            request\n                .get(\"/patient/findByTime\", {\n                    params: {\n                        arTime: dateYear,\n                        dSection: this.sectionOpt,\n                    },\n                })\n                .then((res) => {\n                    this.sectionData = res.data.data;\n                    console.log(res.data.data);\n                    \n                    this.clickTag = true;\n                });\n        },\n        //获取当天及后7天的日期星期\n        nowDay(num) {\n            var nowDate = new Date();\n            var currentHour = nowDate.getHours();\n            var currentMinute = nowDate.getMinutes();\n\n            // 判断当前时间是否已经过了23:59\n            if (\n                currentHour > 23 ||\n                (currentHour === 23 && currentMinute > 59)\n            ) {\n                num++; // 次日\n            }\n\n            nowDate.setDate(nowDate.getDate() + num);\n            var month = nowDate.getMonth() + 1;\n            var date = nowDate.getDate();\n            if (date < 10) {\n                date = \"0\" + date;\n            }\n            if (month < 10) {\n                month = \"0\" + month;\n            }\n            var time = month + \"-\" + date;\n            this.monthDays.push(time);\n        },\n        //请求科室医生信息\n        requestSection() {\n            request\n                .get(\"patient/findDoctorBySection\", {\n                    params: {\n                        dSection: this.$route.query.sectionOpt,\n                    },\n                })\n                .then((res) => {\n                    if (res.data.status !== 200)\n                        return this.$message.error(\"请求数据失败\");\n                    this.sectionData = res.data.data.doctors;\n                    console.log(res.data.data.doctors);\n                });\n        },\n        //请求患者信息\n        requestPatient() {\n            request.get(\"patient/findPatientById\", {\n                params: {\n                    pId: this.userId\n                }\n            })\n                .then(res => {\n                    if (res.data.status != 200)\n                        return this.$message.error(\"获取数据失败\");\n                    this.patientData = res.data.data;\n                    console.log(this.patientData);\n                })\n        }\n    },\n    created() {\n        //获取当天的后7天\n        for (var i = 0; i < 7; i++) {\n            this.nowDay(i);\n        }\n        //按科室请求医生信息\n        this.requestSection();\n        //解码token信息\n        const token = getToken();\n        this.userId = jwtDecode(token).user_id;\n        this.requestPatient();\n    },\n};\n</script>\n<style scoped lang=\"scss\">\n.dateUl li {\n    display: inline;\n    padding: 1px;\n}\n\n.dateUl {\n    margin: 10px;\n}\n\n.el-breadcrumb {\n    margin: 8px;\n}\n\n.head {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.el-form {\n    margin-top: 0;\n}\n</style>"]}]}