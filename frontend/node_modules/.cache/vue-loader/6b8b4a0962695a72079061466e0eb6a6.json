{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\SectionMessage.vue?vue&type=template&id=e64265c8&scoped=true&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\SectionMessage.vue","mtime":1744769032767},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1689001369726},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}