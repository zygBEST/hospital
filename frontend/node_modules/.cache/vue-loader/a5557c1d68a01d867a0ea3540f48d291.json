{"remainingRequest":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\MyBed.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\src\\views\\MyBed.vue","mtime":1741596054773},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1689001367226},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001368654},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\My_Project\\毕设项目\\flask+vue医务管理系统\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBqd3REZWNvZGUgZnJvbSAiand0LWRlY29kZSI7CmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdC5qcyI7CmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAiQC91dGlscy9zdG9yYWdlLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIk15QmVkIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYmVkRGF0YTpbXSwKICAgICAgICAgICAgdXNlcklkOjEsCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvL+ivt+axgueXheW6iuS/oeaBrwogICAgICAgIHJlcXVlc3RCZWQoKXsKICAgICAgICAgICAgcmVxdWVzdC5nZXQoInBhdGllbnQvZmluZEJlZEJ5UGlkIiwgewogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgcElkOiB0aGlzLnVzZXJJZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgaWYocmVzLmRhdGEuc3RhdHVzICE9PSAyMDApCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivt+axguaVsOaNruWksei0pSIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgICB0aGlzLmJlZERhdGEgPSByZXMuZGF0YS5kYXRhOwogICAgICAgICAgICB9KQoKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKXsKICAgICAgICAvL+ino+eggXRva2Vu5L+h5oGvCiAgICAgICAgY29uc3QgdG9rZW4gPSBnZXRUb2tlbigpOwogICAgICAgIHRoaXMudXNlcklkID0gand0RGVjb2RlKHRva2VuKS51c2VyX2lkOwogICAgICAgIHRoaXMucmVxdWVzdEJlZCgpOwogICAgfQp9Cg=="},{"version":3,"sources":["MyBed.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyBed.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <el-card>\n            <el-table :data=\"bedData\" border stripe>\n                <el-table-column label=\"床号\" prop=\"bId\" v-model=\"bedData.bId\"></el-table-column>\n                <el-table-column label=\"用户id\" prop=\"pId\" v-model=\"bedData.pId\"></el-table-column>\n                <el-table-column label=\"医生id\" prop=\"dId\" v-model=\"bedData.dId\"></el-table-column>\n                <el-table-column label=\"原因\" prop=\"bReason\" v-model=\"bedData.bReason\"></el-table-column>\n                <el-table-column label=\"开始时间\" prop=\"bStart\" v-model=\"bedData.bStart\"></el-table-column>\n                <el-table-column label=\"结束时间\" prop=\"bEnd\" v-model=\"bedData.bEnd\"></el-table-column>\n            </el-table>\n        </el-card>\n    </div>\n</template>\n<script>\nimport jwtDecode from \"jwt-decode\";\nimport request from \"@/utils/request.js\";\nimport { getToken } from \"@/utils/storage.js\";\nexport default {\n    name: \"MyBed\",\n    data() {\n        return {\n            bedData:[],\n            userId:1,\n        }\n    },\n    methods: {\n        //请求病床信息\n        requestBed(){\n            request.get(\"patient/findBedByPid\", {\n                params: {\n                    pId: this.userId\n                }\n            })\n            .then(res => {\n                if(res.data.status !== 200)\n                    return this.$message.error(\"请求数据失败\");\n                console.log(res.data.data);\n                this.bedData = res.data.data;\n            })\n\n        },\n    },\n    created(){\n        //解码token信息\n        const token = getToken();\n        this.userId = jwtDecode(token).user_id;\n        this.requestBed();\n    }\n}\n</script>"]}]}